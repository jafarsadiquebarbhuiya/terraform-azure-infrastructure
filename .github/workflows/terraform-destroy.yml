name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY-DEV" to confirm destruction of DEV environment'
        required: true
        type: string

permissions:
  contents: read

jobs:
  terraform-destroy:
    name: 'Destroy DEV Environment'
    runs-on: ubuntu-latest
    environment: DEV
    
    if: github.event.inputs.confirm_destroy == 'DESTROY-DEV'
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_CLI: false
    
    defaults:
      run:
        shell: bash
        working-directory: environments/dev  # Your working directory

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy Plan
      run: terraform plan -var-file="devterraform.tfvars" -destroy -out=destroy-plan

    - name: Terraform Destroy
      run: terraform apply -auto-approve destroy-plan

    - name: Notify Destruction
      uses: actions/github-script@v7
      if: success()
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `### 💥 DEV Environment Destroyed
          
          **Environment:** DEV
          **Working Directory:** \`environments/dev\`
          **Destroyed by:** @${{ github.actor }}
          **Timestamp:** ${new Date().toISOString()}
          **Run ID:** ${{ github.run_id }}
          
          ⚠️ **All DEV environment resources have been destroyed!**
          
          To recreate the environment, run the Terraform Apply workflow.
          
          [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
          
          // Try to find an existing issue for deployment notifications
          try {
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'deployment-notifications'
            });
            
            if (issues.length > 0) {
              // Comment on existing deployment issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues[0].number,
                body: output
              });
            } else {
              // Create new deployment notifications issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '📋 Deployment Notifications',
                body: `This issue tracks deployment notifications for the terraform-azure-infrastructure repository.
                
                ${output}`,
                labels: ['deployment-notifications']
              });
            }
          } catch (error) {
            console.log('Could not create notification comment:', error.message);
          }
      continue-on-error: true