name: 'Terraform Selective Destroy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to target'
        required: true
        default: 'DEV'
        type: choice
        options:
          - DEV
          - STAGE  # You'll add this later
          - PROD   # You'll add this later
      resource_target:
        description: 'Resource to destroy (e.g., module.dev_storageaccount, azurerm_storage_account.storage_account[0])'
        required: true
        type: string
      confirm_destroy:
        description: 'Type "DESTROY-RESOURCE" to confirm destruction'
        required: true
        type: string

permissions:
  contents: read

jobs:
  terraform-destroy:
    name: 'Destroy Resource - ${{ github.event.inputs.environment }}'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    if: github.event.inputs.confirm_destroy == 'DESTROY-RESOURCE'
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_CLI: false

    steps:
    - name: Set Environment Variables
      id: env_vars
      run: |
        case "${{ github.event.inputs.environment }}" in
          "DEV")
            echo "dir=dev" >> $GITHUB_OUTPUT
            echo "tfvars=devterraform.tfvars" >> $GITHUB_OUTPUT
            ;;
          "STAGE")
            echo "dir=staging" >> $GITHUB_OUTPUT
            echo "tfvars=stageterraform.tfvars" >> $GITHUB_OUTPUT
            ;;
          "PROD")
            echo "dir=prod" >> $GITHUB_OUTPUT
            echo "tfvars=prodterraform.tfvars" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Validate Resource Target
      run: |
        if [ -z "${{ github.event.inputs.resource_target }}" ]; then
          echo "❌ Resource target cannot be empty"
          exit 1
        fi
        echo "✅ Targeting resource: ${{ github.event.inputs.resource_target }}"
        echo "✅ Environment: ${{ github.event.inputs.environment }}"
        echo "✅ Directory: environments/${{ steps.env_vars.outputs.dir }}"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Terraform Init
      run: terraform init
      working-directory: environments/${{ steps.env_vars.outputs.dir }}

    - name: Show Current Resources
      run: |
        echo "### 📋 Current Resources in ${{ github.event.inputs.environment }} Environment" >> $GITHUB_STEP_SUMMARY
        terraform state list >> $GITHUB_STEP_SUMMARY || echo "No resources found or state file empty" >> $GITHUB_STEP_SUMMARY
      working-directory: environments/${{ steps.env_vars.outputs.dir }}

    - name: Terraform Destroy Plan
      run: |
        echo "Creating destroy plan for: ${{ github.event.inputs.resource_target }}"
        terraform plan -var-file="${{ steps.env_vars.outputs.tfvars }}" -destroy -target="${{ github.event.inputs.resource_target }}" -out=destroy-plan
      working-directory: environments/${{ steps.env_vars.outputs.dir }}

    - name: Show Destroy Plan
      run: |
        echo "### 🗑️ Resource to be DESTROYED:" >> $GITHUB_STEP_SUMMARY
        echo "**Target:** \`${{ github.event.inputs.resource_target }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        terraform show -no-color destroy-plan >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      working-directory: environments/${{ steps.env_vars.outputs.dir }}

    - name: Terraform Destroy
      run: |
        echo "Executing destruction of: ${{ github.event.inputs.resource_target }}"
        terraform apply -auto-approve destroy-plan
      working-directory: environments/${{ steps.env_vars.outputs.dir }}

    - name: Log Destruction Success
      run: |
        echo "### 💥 Selective Destruction Completed"
        echo "**Resource Destroyed:** \`${{ github.event.inputs.resource_target }}\`"
        echo "**Environment:** ${{ github.event.inputs.environment }}"
        echo "**Directory:** environments/${{ steps.env_vars.outputs.dir }}"
        echo "**Destroyed by:** ${{ github.actor }}"
        echo "**Timestamp:** $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
        echo "✅ Targeted resource destruction completed. Other resources remain intact."